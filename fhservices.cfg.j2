# Check that a component responds to a /sys/info/ping over HTTP
define command {
       command_name   check_fh_component_http_ping
       command_line   $USER1$/check_http -H $ARG1$ -u /sys/info/ping -p 8080
}

# Check that a component responds to a /sys/info/health over HTTP
define command {
       command_name   check_fh_component_health
       command_line   /opt/rhmap/nagios/plugins/fh-check-component-health -H $ARG1$ -P $ARG2$ -E $ARG3$
}

# Check that an EAP component responds to a ping over HTTP
define command {
       command_name   check_eap_component_health
       command_line   $USER1$/check_http -H $ARG1$ -p $ARG2$ -u $ARG3$ -e "$ARG4$"
}

# Check for valid response from Memcached
define command {
       command_name   check_memcached
       command_line   $USER1$/check_tcp -H memcached -p $ARG1$ -E -s 'version\n' -e 'VERSION' -w2 -c5 -t5
}

define command {
       command_name   check_nagios_host
       command_line   $USER1$/check_http -H $HOSTADDRESS$ -S
}

define command {
  command_name   check_pod_disk_usage
  command_line   /opt/rhmap/nagios/plugins/disk-usage -w $ARG1$ -c $ARG2$
}

define contact {
       contact_name   rhmapadmin
       use            generic-contact
       alias          RHMAP Admin
       email          {{ rhmap_admin_email }}
}

define contactgroup {
       contactgroup_name  rhmapadmins
       alias              RHMAP Administrators
       members            rhmapadmin
}

define hostgroup {
       hostgroup_name core
       alias core
}

define hostgroup {
       hostgroup_name mbaas
       alias mbaas
}

# Host template
define host {
  name                    fh-component-container
  use                     generic-host
  check_period            24x7
  check_interval          5
  retry_interval          1
  max_check_attempts      10
  check_command           check_nagios_host
  notification_period     workhours
  notification_interval   120
  notification_options    d,u,r
  contact_groups          rhmapadmins
  register                0
}

# This is a dummy host really, just so the host doesn't go red
define host {
       use fh-component-container
       address {{ rhmap_router_dns }}
       host_name {{ rhmap_router_dns }}
       hostgroups {{ rhmap_hostgroups }}
}

{% for fhservice in fh_services if 'ping' in fhservice['checks'] %}
define service {
       service_description {{ fhservice['name'] }}::Ping
       check_command check_fh_component_http_ping!{{ fhservice['name'] }}!{{ fhservice.get("port", "8080") }}!{{ fhservice.get("ping_endpoint", "/sys/info/ping") }}
       use generic-service
       hostgroup_name {{ ",".join(fhservice['hostgroups']) }}
       notes This server cannot access {{ fhservice['name'] }}, check it is running and that this server is able to talk to it on port 8080
       contact_groups rhmapadmins
}
{% endfor %}

{% for fhservice in fh_services if 'health' in fhservice['checks'] %}
define service {
       service_description {{ fhservice['name'] }}::Health
       check_command check_fh_component_health!{{ fhservice['name'] }}!{{ fhservice.get("port", "8080") }}!{{ fhservice.get("health_endpoint", "/sys/info/health") }}
       use generic-service
       hostgroup_name {{ ",".join(fhservice['hostgroups']) }}
       notes This server failed to get a successful response from the {{ fhservice['name'] }} health endpoint. Check the response code & body and ensure the service and its dependencies are running and configured correctly.
       contact_groups rhmapadmins
}
{% endfor %}

define service {
      service_description keycloak:Health
      check_command check_eap_component_health!ups!8080!/auth/admin!HTTP/1.1 302
      use generic-service
      hostgroup_name core
      notes This server failed to get a successful response from the Keycloak service health endpoint. Check the response code & body and ensure the service and its dependencies are running and configured correctly.
      contact_groups rhmapadmins
}

define service {
      service_description memcached:ping
      check_command check_memcached!11211
      use generic-service
      hostgroup_name core
      notes This should be able to communicate with memcached on port 11211 and cannot. Check it is running and this server can communicate with it on that port.
      contact_groups rhmapadmins
}

define service {
       service_description Storage::Pod::Disk Usage
       # REVIEW: is this being applied to every pod/container? How does it work?
       hosts {{ rhmap_router_dns }}
       check_command check_pod_disk_usage!80!90
       use generic-service

       notes One or more pods have volumes which are running out of disk.  You should clean up the files on this pod, if possible, or scale down/up the pod so that it has a fresh filesystem.
       contact_groups rhmapadmins
}
